apiVersion: serving.kserve.io/v1alpha1
kind: ServingRuntime
metadata:
  name: guardrails-detector-runtime-hap
  annotations:
    openshift.io/display-name: Guardrails Detector ServingRuntime for KServe
    opendatahub.io/recommended-accelerators: '["nvidia.com/gpu"]'
  labels:
    opendatahub.io/dashboard: 'true'
spec:
  annotations:
    prometheus.io/port: '8080'
    prometheus.io/path: '/metrics'
  multiModel: false
  supportedModelFormats:
    - autoSelect: true
      name: guardrails-detector-huggingface
  containers:
    - name: kserve-container
      image: quay.io/rh-ee-mmisiura/hf-detector:latest 
      command:
        - uvicorn
        - app:app
      args:
        - "--workers"
        - "4"
        - "--host"
        - "0.0.0.0"
        - "--port"
        - "8000"
        - "--log-config"
        - "/common/log_conf.yaml"
      env:
        - name: MODEL_DIR
          value: /mnt/models
        - name: HF_HOME
          value: /tmp/hf_home
      ports:
        - containerPort: 8000
          protocol: TCP
---
apiVersion: serving.kserve.io/v1beta1
kind: InferenceService
metadata:
  name: ibm-hap-38m-detector
  labels:
    opendatahub.io/dashboard: 'true'
    trustyai/guardrails: 'true'
  annotations:
    openshift.io/display-name: ibm-hap-38m-detector
    serving.knative.openshift.io/enablePassthrough: 'true'
    sidecar.istio.io/inject: 'true'
    sidecar.istio.io/rewriteAppHTTPProbers: 'true'
    serving.kserve.io/deploymentMode: RawDeployment
    security.opendatahub.io/enable-auth: 'false'
spec:
  predictor:
    maxReplicas: 1
    minReplicas: 1
    model:
      modelFormat:
        name: guardrails-detector-huggingface
      name: ''
      runtime: guardrails-detector-runtime-hap
      storage:
        key: aws-connection-minio-data-connection-detector-models
        path: granite-guardian-hap-38m
      resources:
        limits:
          cpu: '1'
          memory: 2Gi
          nvidia.com/gpu: '0'
        requests:
          cpu: '1'
          memory: 2Gi
          nvidia.com/gpu: '0'
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: hap-detector-route
spec:
  to:
    kind: Service
    name: ibm-hap-38m-detector-predictor
